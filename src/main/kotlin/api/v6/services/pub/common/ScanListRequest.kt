// Code generated by Wire protocol buffer compiler, do not edit.
// Source: v6.services.pub.common.ScanListRequest in common/pub_common.proto
@file:Suppress("DEPRECATION")

package api.v6.services.pub.common

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.immutableCopyOf
import com.squareup.wire.`internal`.redactElements
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import okio.ByteString

public class ScanListRequest(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val token: String = "",
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  public val limit: Long = 0L,
  order_by: List<OrderByInfo> = emptyList(),
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 3,
  )
  public val version: Int = 0,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<ScanListRequest, Nothing>(ADAPTER, unknownFields) {
  @field:WireField(
    tag = 3,
    adapter = "v6.services.pub.common.OrderByInfo#ADAPTER",
    label = WireField.Label.REPEATED,
    jsonName = "orderBy",
    schemaIndex = 2,
  )
  public val order_by: List<OrderByInfo> = immutableCopyOf("order_by", order_by)

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is ScanListRequest) return false
    if (unknownFields != other.unknownFields) return false
    if (token != other.token) return false
    if (limit != other.limit) return false
    if (order_by != other.order_by) return false
    if (version != other.version) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + token.hashCode()
      result = result * 37 + limit.hashCode()
      result = result * 37 + order_by.hashCode()
      result = result * 37 + version.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """token=${sanitize(token)}"""
    result += """limit=$limit"""
    if (order_by.isNotEmpty()) result += """order_by=$order_by"""
    result += """version=$version"""
    return result.joinToString(prefix = "ScanListRequest{", separator = ", ", postfix = "}")
  }

  public fun copy(
    token: String = this.token,
    limit: Long = this.limit,
    order_by: List<OrderByInfo> = this.order_by,
    version: Int = this.version,
    unknownFields: ByteString = this.unknownFields,
  ): ScanListRequest = ScanListRequest(token, limit, order_by, version, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<ScanListRequest> = object : ProtoAdapter<ScanListRequest>(
      FieldEncoding.LENGTH_DELIMITED, 
      ScanListRequest::class, 
      "type.googleapis.com/v6.services.pub.common.ScanListRequest", 
      PROTO_3, 
      null, 
      "common/pub_common.proto"
    ) {
      override fun encodedSize(`value`: ScanListRequest): Int {
        var size = value.unknownFields.size
        if (value.token != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.token)
        if (value.limit != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(2, value.limit)
        size += OrderByInfo.ADAPTER.asRepeated().encodedSizeWithTag(3, value.order_by)
        if (value.version != 0) size += ProtoAdapter.INT32.encodedSizeWithTag(4, value.version)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: ScanListRequest) {
        if (value.token != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.token)
        if (value.limit != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 2, value.limit)
        OrderByInfo.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.order_by)
        if (value.version != 0) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.version)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: ScanListRequest) {
        writer.writeBytes(value.unknownFields)
        if (value.version != 0) ProtoAdapter.INT32.encodeWithTag(writer, 4, value.version)
        OrderByInfo.ADAPTER.asRepeated().encodeWithTag(writer, 3, value.order_by)
        if (value.limit != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 2, value.limit)
        if (value.token != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.token)
      }

      override fun decode(reader: ProtoReader): ScanListRequest {
        var token: String = ""
        var limit: Long = 0L
        val order_by = mutableListOf<OrderByInfo>()
        var version: Int = 0
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> token = ProtoAdapter.STRING.decode(reader)
            2 -> limit = ProtoAdapter.INT64.decode(reader)
            3 -> order_by.add(OrderByInfo.ADAPTER.decode(reader))
            4 -> version = ProtoAdapter.INT32.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return ScanListRequest(
          token = token,
          limit = limit,
          order_by = order_by,
          version = version,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: ScanListRequest): ScanListRequest = value.copy(
        order_by = value.order_by.redactElements(OrderByInfo.ADAPTER),
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
