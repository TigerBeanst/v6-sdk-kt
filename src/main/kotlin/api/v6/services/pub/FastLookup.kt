// Code generated by Wire protocol buffer compiler, do not edit.
// Source: v6.services.pub.FastLookup in slice_svc.proto
@file:Suppress("DEPRECATION")

package api.v6.services.pub

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Suppress
import okio.ByteString

public class FastLookup(
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val identity: String = "",
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "wcsEtag",
    schemaIndex = 1,
  )
  public val wcs_etag: String = "",
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  public val sha1: String = "",
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "headSha1",
    schemaIndex = 3,
  )
  public val head_sha1: String = "",
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "fileSize",
    schemaIndex = 4,
  )
  public val file_size: Long = 0L,
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "specialSha1",
    schemaIndex = 5,
  )
  public val special_sha1: String = "",
  @field:WireField(
    tag = 7,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 6,
  )
  public val name: String = "",
  @field:WireField(
    tag = 8,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "lhHash",
    schemaIndex = 7,
  )
  public val lh_hash: String = "",
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<FastLookup, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is FastLookup) return false
    if (unknownFields != other.unknownFields) return false
    if (identity != other.identity) return false
    if (wcs_etag != other.wcs_etag) return false
    if (sha1 != other.sha1) return false
    if (head_sha1 != other.head_sha1) return false
    if (file_size != other.file_size) return false
    if (special_sha1 != other.special_sha1) return false
    if (name != other.name) return false
    if (lh_hash != other.lh_hash) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + identity.hashCode()
      result = result * 37 + wcs_etag.hashCode()
      result = result * 37 + sha1.hashCode()
      result = result * 37 + head_sha1.hashCode()
      result = result * 37 + file_size.hashCode()
      result = result * 37 + special_sha1.hashCode()
      result = result * 37 + name.hashCode()
      result = result * 37 + lh_hash.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """identity=${sanitize(identity)}"""
    result += """wcs_etag=${sanitize(wcs_etag)}"""
    result += """sha1=${sanitize(sha1)}"""
    result += """head_sha1=${sanitize(head_sha1)}"""
    result += """file_size=$file_size"""
    result += """special_sha1=${sanitize(special_sha1)}"""
    result += """name=${sanitize(name)}"""
    result += """lh_hash=${sanitize(lh_hash)}"""
    return result.joinToString(prefix = "FastLookup{", separator = ", ", postfix = "}")
  }

  public fun copy(
    identity: String = this.identity,
    wcs_etag: String = this.wcs_etag,
    sha1: String = this.sha1,
    head_sha1: String = this.head_sha1,
    file_size: Long = this.file_size,
    special_sha1: String = this.special_sha1,
    name: String = this.name,
    lh_hash: String = this.lh_hash,
    unknownFields: ByteString = this.unknownFields,
  ): FastLookup = FastLookup(identity, wcs_etag, sha1, head_sha1, file_size, special_sha1, name,
      lh_hash, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<FastLookup> = object : ProtoAdapter<FastLookup>(
      FieldEncoding.LENGTH_DELIMITED, 
      FastLookup::class, 
      "type.googleapis.com/v6.services.pub.FastLookup", 
      PROTO_3, 
      null, 
      "slice_svc.proto"
    ) {
      override fun encodedSize(`value`: FastLookup): Int {
        var size = value.unknownFields.size
        if (value.identity != "") size += ProtoAdapter.STRING.encodedSizeWithTag(1, value.identity)
        if (value.wcs_etag != "") size += ProtoAdapter.STRING.encodedSizeWithTag(2, value.wcs_etag)
        if (value.sha1 != "") size += ProtoAdapter.STRING.encodedSizeWithTag(3, value.sha1)
        if (value.head_sha1 != "") size += ProtoAdapter.STRING.encodedSizeWithTag(4,
            value.head_sha1)
        if (value.file_size != 0L) size += ProtoAdapter.INT64.encodedSizeWithTag(5, value.file_size)
        if (value.special_sha1 != "") size += ProtoAdapter.STRING.encodedSizeWithTag(6,
            value.special_sha1)
        if (value.name != "") size += ProtoAdapter.STRING.encodedSizeWithTag(7, value.name)
        if (value.lh_hash != "") size += ProtoAdapter.STRING.encodedSizeWithTag(8, value.lh_hash)
        return size
      }

      override fun encode(writer: ProtoWriter, `value`: FastLookup) {
        if (value.identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.identity)
        if (value.wcs_etag != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.wcs_etag)
        if (value.sha1 != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.sha1)
        if (value.head_sha1 != "") ProtoAdapter.STRING.encodeWithTag(writer, 4, value.head_sha1)
        if (value.file_size != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.file_size)
        if (value.special_sha1 != "") ProtoAdapter.STRING.encodeWithTag(writer, 6,
            value.special_sha1)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.name)
        if (value.lh_hash != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.lh_hash)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: FastLookup) {
        writer.writeBytes(value.unknownFields)
        if (value.lh_hash != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.lh_hash)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 7, value.name)
        if (value.special_sha1 != "") ProtoAdapter.STRING.encodeWithTag(writer, 6,
            value.special_sha1)
        if (value.file_size != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.file_size)
        if (value.head_sha1 != "") ProtoAdapter.STRING.encodeWithTag(writer, 4, value.head_sha1)
        if (value.sha1 != "") ProtoAdapter.STRING.encodeWithTag(writer, 3, value.sha1)
        if (value.wcs_etag != "") ProtoAdapter.STRING.encodeWithTag(writer, 2, value.wcs_etag)
        if (value.identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.identity)
      }

      override fun decode(reader: ProtoReader): FastLookup {
        var identity: String = ""
        var wcs_etag: String = ""
        var sha1: String = ""
        var head_sha1: String = ""
        var file_size: Long = 0L
        var special_sha1: String = ""
        var name: String = ""
        var lh_hash: String = ""
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> identity = ProtoAdapter.STRING.decode(reader)
            2 -> wcs_etag = ProtoAdapter.STRING.decode(reader)
            3 -> sha1 = ProtoAdapter.STRING.decode(reader)
            4 -> head_sha1 = ProtoAdapter.STRING.decode(reader)
            5 -> file_size = ProtoAdapter.INT64.decode(reader)
            6 -> special_sha1 = ProtoAdapter.STRING.decode(reader)
            7 -> name = ProtoAdapter.STRING.decode(reader)
            8 -> lh_hash = ProtoAdapter.STRING.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return FastLookup(
          identity = identity,
          wcs_etag = wcs_etag,
          sha1 = sha1,
          head_sha1 = head_sha1,
          file_size = file_size,
          special_sha1 = special_sha1,
          name = name,
          lh_hash = lh_hash,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: FastLookup): FastLookup = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
