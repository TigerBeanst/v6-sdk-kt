// Code generated by Wire protocol buffer compiler, do not edit.
// Source: v6.services.pub.PubUserFile in public_user_file.proto
@file:Suppress("DEPRECATION")

package api.v6.services.pub

import com.squareup.wire.GrpcCall
import com.squareup.wire.GrpcClient
import com.squareup.wire.GrpcMethod
import kotlin.Suppress

public class GrpcPubUserFileClient(
  private val client: GrpcClient,
) : PubUserFileClient {
  override fun Create(): GrpcCall<File, File> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Create",
      requestAdapter = File.ADAPTER,
      responseAdapter = File.ADAPTER
  ))

  override fun Get(): GrpcCall<File, File> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Get",
      requestAdapter = File.ADAPTER,
      responseAdapter = File.ADAPTER
  ))

  /**
   * rpc Update (File) returns (File) {}
   */
  override fun Rename(): GrpcCall<File, BatchOperationResponse> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Rename",
      requestAdapter = File.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun Trash(): GrpcCall<BatchOperationRequest, BatchOperationResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Trash",
      requestAdapter = BatchOperationRequest.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun Move(): GrpcCall<BatchOperationRequest, BatchOperationResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Move",
      requestAdapter = BatchOperationRequest.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun Copy(): GrpcCall<BatchOperationRequest, BatchOperationResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Copy",
      requestAdapter = BatchOperationRequest.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun Delete(): GrpcCall<BatchOperationRequest, BatchOperationResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Delete",
      requestAdapter = BatchOperationRequest.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun DeleteTrash(): GrpcCall<BatchOperationRequest, BatchOperationResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/DeleteTrash",
      requestAdapter = BatchOperationRequest.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun Recover(): GrpcCall<BatchOperationRequest, BatchOperationResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Recover",
      requestAdapter = BatchOperationRequest.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun BatchOperation(): GrpcCall<BatchOperationRequest, BatchOperationResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/BatchOperation",
      requestAdapter = BatchOperationRequest.ADAPTER,
      responseAdapter = BatchOperationResponse.ADAPTER
  ))

  override fun List(): GrpcCall<FileListRequest, FileListResponse> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/List",
      requestAdapter = FileListRequest.ADAPTER,
      responseAdapter = FileListResponse.ADAPTER
  ))

  override fun ListTrash(): GrpcCall<FileListRequest, FileListResponse> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/ListTrash",
      requestAdapter = FileListRequest.ADAPTER,
      responseAdapter = FileListResponse.ADAPTER
  ))

  override fun Search(): GrpcCall<SearchRequest, FileListResponse> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/Search",
      requestAdapter = SearchRequest.ADAPTER,
      responseAdapter = FileListResponse.ADAPTER
  ))

  override fun CreateManageRTCOffer(): GrpcCall<ManageRTCRequest, ManageRTCResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/CreateManageRTCOffer",
      requestAdapter = ManageRTCRequest.ADAPTER,
      responseAdapter = ManageRTCResponse.ADAPTER
  ))

  override fun SendClientIceCandidate(): GrpcCall<SendIceCandidateRequest, SendIceCandidateResponse>
      = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/SendClientIceCandidate",
      requestAdapter = SendIceCandidateRequest.ADAPTER,
      responseAdapter = SendIceCandidateResponse.ADAPTER
  ))

  override fun GetServerIceCandidate(): GrpcCall<GetIceCandidateRequest, GetIceCandidateResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/GetServerIceCandidate",
      requestAdapter = GetIceCandidateRequest.ADAPTER,
      responseAdapter = GetIceCandidateResponse.ADAPTER
  ))

  override fun ParseFileSlice(): GrpcCall<File, ParseFileSliceResponse> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/ParseFileSlice",
      requestAdapter = File.ADAPTER,
      responseAdapter = ParseFileSliceResponse.ADAPTER
  ))

  override fun GetSliceDownloadAddress():
      GrpcCall<SliceDownloadAddressRequest, SliceDownloadAddressResponse> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/GetSliceDownloadAddress",
      requestAdapter = SliceDownloadAddressRequest.ADAPTER,
      responseAdapter = SliceDownloadAddressResponse.ADAPTER
  ))

  override fun GetDownloadAndPreviewInfo(): GrpcCall<File, DownloadAndPreviewInfo> =
      client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/GetDownloadAndPreviewInfo",
      requestAdapter = File.ADAPTER,
      responseAdapter = DownloadAndPreviewInfo.ADAPTER
  ))

  override fun PreviewDoc(): GrpcCall<File, DocFilePreview> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/PreviewDoc",
      requestAdapter = File.ADAPTER,
      responseAdapter = DocFilePreview.ADAPTER
  ))

  override fun CreateDoc(): GrpcCall<File, DocFilePreview> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/CreateDoc",
      requestAdapter = File.ADAPTER,
      responseAdapter = DocFilePreview.ADAPTER
  ))

  override fun CreateUploadToken(): GrpcCall<File, UploadToken> = client.newCall(GrpcMethod(
      path = "/v6.services.pub.PubUserFile/CreateUploadToken",
      requestAdapter = File.ADAPTER,
      responseAdapter = UploadToken.ADAPTER
  ))
}
