// Code generated by Wire protocol buffer compiler, do not edit.
// Source: v6.services.pub.TaskFile in public_user_offline.proto
@file:Suppress("DEPRECATION")

package api.v6.services.pub

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Suppress
import okio.ByteString

public class TaskFile(
  /**
   * identity
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val identity: String = "",
  /**
   * string file_identity = 2;
   * string task_identity = 3;
   */
  @field:WireField(
    tag = 4,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  public val path: String = "",
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  public val status: Int = 0,
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "updateTs",
    schemaIndex = 3,
  )
  public val update_ts: Long = 0L,
  @field:WireField(
    tag = 7,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "createTs",
    schemaIndex = 4,
  )
  public val create_ts: Long = 0L,
  @field:WireField(
    tag = 8,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 5,
  )
  public val name: String = "",
  @field:WireField(
    tag = 9,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 6,
  )
  public val size: Long = 0L,
  /**
   * string content_identity = 10;
   * int32 code = 11;
   * string message = 12;
   */
  @field:WireField(
    tag = 13,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "bytesTotal",
    schemaIndex = 7,
  )
  public val bytes_total: Long = 0L,
  /**
   * uint64 bytes_processed = 14;
   */
  @field:WireField(
    tag = 15,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 8,
  )
  public val index: Int = 0,
  @field:WireField(
    tag = 16,
    adapter = "com.squareup.wire.ProtoAdapter#BOOL",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 9,
  )
  public val directory: Boolean = false,
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<TaskFile, Nothing>(ADAPTER, unknownFields) {
  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is TaskFile) return false
    if (unknownFields != other.unknownFields) return false
    if (identity != other.identity) return false
    if (path != other.path) return false
    if (status != other.status) return false
    if (update_ts != other.update_ts) return false
    if (create_ts != other.create_ts) return false
    if (name != other.name) return false
    if (size != other.size) return false
    if (bytes_total != other.bytes_total) return false
    if (index != other.index) return false
    if (directory != other.directory) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + identity.hashCode()
      result = result * 37 + path.hashCode()
      result = result * 37 + status.hashCode()
      result = result * 37 + update_ts.hashCode()
      result = result * 37 + create_ts.hashCode()
      result = result * 37 + name.hashCode()
      result = result * 37 + size.hashCode()
      result = result * 37 + bytes_total.hashCode()
      result = result * 37 + index.hashCode()
      result = result * 37 + directory.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """identity=${sanitize(identity)}"""
    result += """path=${sanitize(path)}"""
    result += """status=$status"""
    result += """update_ts=$update_ts"""
    result += """create_ts=$create_ts"""
    result += """name=${sanitize(name)}"""
    result += """size=$size"""
    result += """bytes_total=$bytes_total"""
    result += """index=$index"""
    result += """directory=$directory"""
    return result.joinToString(prefix = "TaskFile{", separator = ", ", postfix = "}")
  }

  public fun copy(
    identity: String = this.identity,
    path: String = this.path,
    status: Int = this.status,
    update_ts: Long = this.update_ts,
    create_ts: Long = this.create_ts,
    name: String = this.name,
    size: Long = this.size,
    bytes_total: Long = this.bytes_total,
    index: Int = this.index,
    directory: Boolean = this.directory,
    unknownFields: ByteString = this.unknownFields,
  ): TaskFile = TaskFile(identity, path, status, update_ts, create_ts, name, size, bytes_total,
      index, directory, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<TaskFile> = object : ProtoAdapter<TaskFile>(
      FieldEncoding.LENGTH_DELIMITED, 
      TaskFile::class, 
      "type.googleapis.com/v6.services.pub.TaskFile", 
      PROTO_3, 
      null, 
      "public_user_offline.proto"
    ) {
      override fun encodedSize(`value`: TaskFile): Int {
        var size_ = value.unknownFields.size
        if (value.identity != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(1, value.identity)
        if (value.path != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(4, value.path)
        if (value.status != 0) size_ += ProtoAdapter.INT32.encodedSizeWithTag(5, value.status)
        if (value.update_ts != 0L) size_ += ProtoAdapter.INT64.encodedSizeWithTag(6,
            value.update_ts)
        if (value.create_ts != 0L) size_ += ProtoAdapter.INT64.encodedSizeWithTag(7,
            value.create_ts)
        if (value.name != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(8, value.name)
        if (value.size != 0L) size_ += ProtoAdapter.UINT64.encodedSizeWithTag(9, value.size)
        if (value.bytes_total != 0L) size_ += ProtoAdapter.UINT64.encodedSizeWithTag(13,
            value.bytes_total)
        if (value.index != 0) size_ += ProtoAdapter.INT32.encodedSizeWithTag(15, value.index)
        if (value.directory != false) size_ += ProtoAdapter.BOOL.encodedSizeWithTag(16,
            value.directory)
        return size_
      }

      override fun encode(writer: ProtoWriter, `value`: TaskFile) {
        if (value.identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.identity)
        if (value.path != "") ProtoAdapter.STRING.encodeWithTag(writer, 4, value.path)
        if (value.status != 0) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.status)
        if (value.update_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 6, value.update_ts)
        if (value.create_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 7, value.create_ts)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.name)
        if (value.size != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.size)
        if (value.bytes_total != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 13,
            value.bytes_total)
        if (value.index != 0) ProtoAdapter.INT32.encodeWithTag(writer, 15, value.index)
        if (value.directory != false) ProtoAdapter.BOOL.encodeWithTag(writer, 16, value.directory)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: TaskFile) {
        writer.writeBytes(value.unknownFields)
        if (value.directory != false) ProtoAdapter.BOOL.encodeWithTag(writer, 16, value.directory)
        if (value.index != 0) ProtoAdapter.INT32.encodeWithTag(writer, 15, value.index)
        if (value.bytes_total != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 13,
            value.bytes_total)
        if (value.size != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.size)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.name)
        if (value.create_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 7, value.create_ts)
        if (value.update_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 6, value.update_ts)
        if (value.status != 0) ProtoAdapter.INT32.encodeWithTag(writer, 5, value.status)
        if (value.path != "") ProtoAdapter.STRING.encodeWithTag(writer, 4, value.path)
        if (value.identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.identity)
      }

      override fun decode(reader: ProtoReader): TaskFile {
        var identity: String = ""
        var path: String = ""
        var status: Int = 0
        var update_ts: Long = 0L
        var create_ts: Long = 0L
        var name: String = ""
        var size: Long = 0L
        var bytes_total: Long = 0L
        var index: Int = 0
        var directory: Boolean = false
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> identity = ProtoAdapter.STRING.decode(reader)
            4 -> path = ProtoAdapter.STRING.decode(reader)
            5 -> status = ProtoAdapter.INT32.decode(reader)
            6 -> update_ts = ProtoAdapter.INT64.decode(reader)
            7 -> create_ts = ProtoAdapter.INT64.decode(reader)
            8 -> name = ProtoAdapter.STRING.decode(reader)
            9 -> size = ProtoAdapter.UINT64.decode(reader)
            13 -> bytes_total = ProtoAdapter.UINT64.decode(reader)
            15 -> index = ProtoAdapter.INT32.decode(reader)
            16 -> directory = ProtoAdapter.BOOL.decode(reader)
            else -> reader.readUnknownField(tag)
          }
        }
        return TaskFile(
          identity = identity,
          path = path,
          status = status,
          update_ts = update_ts,
          create_ts = create_ts,
          name = name,
          size = size,
          bytes_total = bytes_total,
          index = index,
          directory = directory,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: TaskFile): TaskFile = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
