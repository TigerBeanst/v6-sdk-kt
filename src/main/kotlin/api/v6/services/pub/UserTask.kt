// Code generated by Wire protocol buffer compiler, do not edit.
// Source: v6.services.pub.UserTask in public_user_offline.proto
@file:Suppress("DEPRECATION")

package api.v6.services.pub

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.ReverseProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.`internal`.JvmField
import com.squareup.wire.`internal`.immutableCopyOf
import com.squareup.wire.`internal`.sanitize
import kotlin.Any
import kotlin.AssertionError
import kotlin.Boolean
import kotlin.Deprecated
import kotlin.DeprecationLevel
import kotlin.Int
import kotlin.Long
import kotlin.Nothing
import kotlin.String
import kotlin.Suppress
import kotlin.collections.List
import okio.ByteString

public class UserTask(
  /**
   * identity
   */
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 0,
  )
  public val identity: String = "",
  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 1,
  )
  public val type: Int = 0,
  @field:WireField(
    tag = 3,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 2,
  )
  public val status: Int = 0,
  /**
   * string user_identity = 4;
   */
  @field:WireField(
    tag = 5,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "updateTs",
    schemaIndex = 3,
  )
  public val update_ts: Long = 0L,
  @field:WireField(
    tag = 6,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    declaredName = "file",
    schemaIndex = 4,
  )
  public val file_: String = "",
  @field:WireField(
    tag = 7,
    adapter = "com.squareup.wire.ProtoAdapter#INT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "createTs",
    schemaIndex = 5,
  )
  public val create_ts: Long = 0L,
  @field:WireField(
    tag = 8,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 6,
  )
  public val url: String = "",
  @field:WireField(
    tag = 9,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 7,
  )
  public val size: Long = 0L,
  @field:WireField(
    tag = 10,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 8,
  )
  public val name: String = "",
  @field:WireField(
    tag = 11,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "taskIdentity",
    schemaIndex = 9,
  )
  public val task_identity: String = "",
  @field:WireField(
    tag = 12,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 10,
  )
  public val code: Int = 0,
  @field:WireField(
    tag = 13,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 11,
  )
  public val message: String = "",
  @field:WireField(
    tag = 14,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 12,
  )
  public val addon: String = "",
  @field:WireField(
    tag = 16,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 13,
  )
  public val progress: Long = 0L,
  @field:WireField(
    tag = 17,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "bytesTotal",
    schemaIndex = 14,
  )
  public val bytes_total: Long = 0L,
  @field:WireField(
    tag = 18,
    adapter = "com.squareup.wire.ProtoAdapter#UINT64",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "bytesProcessed",
    schemaIndex = 15,
  )
  public val bytes_processed: Long = 0L,
  @field:WireField(
    tag = 19,
    adapter = "com.squareup.wire.ProtoAdapter#INT32",
    label = WireField.Label.OMIT_IDENTITY,
    schemaIndex = 16,
  )
  public val flag: Int = 0,
  @field:WireField(
    tag = 20,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.OMIT_IDENTITY,
    jsonName = "savePath",
    schemaIndex = 17,
  )
  public val save_path: String = "",
  callbacks: List<String> = emptyList(),
  ignore_files: List<String> = emptyList(),
  unknownFields: ByteString = ByteString.EMPTY,
) : Message<UserTask, Nothing>(ADAPTER, unknownFields) {
  @field:WireField(
    tag = 21,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.REPEATED,
    schemaIndex = 18,
  )
  public val callbacks: List<String> = immutableCopyOf("callbacks", callbacks)

  @field:WireField(
    tag = 22,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.REPEATED,
    jsonName = "ignoreFiles",
    schemaIndex = 19,
  )
  public val ignore_files: List<String> = immutableCopyOf("ignore_files", ignore_files)

  @Deprecated(
    message = "Shouldn't be used in Kotlin",
    level = DeprecationLevel.HIDDEN,
  )
  override fun newBuilder(): Nothing = throw
      AssertionError("Builders are deprecated and only available in a javaInterop build; see https://square.github.io/wire/wire_compiler/#kotlin")

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is UserTask) return false
    if (unknownFields != other.unknownFields) return false
    if (identity != other.identity) return false
    if (type != other.type) return false
    if (status != other.status) return false
    if (update_ts != other.update_ts) return false
    if (file_ != other.file_) return false
    if (create_ts != other.create_ts) return false
    if (url != other.url) return false
    if (size != other.size) return false
    if (name != other.name) return false
    if (task_identity != other.task_identity) return false
    if (code != other.code) return false
    if (message != other.message) return false
    if (addon != other.addon) return false
    if (progress != other.progress) return false
    if (bytes_total != other.bytes_total) return false
    if (bytes_processed != other.bytes_processed) return false
    if (flag != other.flag) return false
    if (save_path != other.save_path) return false
    if (callbacks != other.callbacks) return false
    if (ignore_files != other.ignore_files) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + identity.hashCode()
      result = result * 37 + type.hashCode()
      result = result * 37 + status.hashCode()
      result = result * 37 + update_ts.hashCode()
      result = result * 37 + file_.hashCode()
      result = result * 37 + create_ts.hashCode()
      result = result * 37 + url.hashCode()
      result = result * 37 + size.hashCode()
      result = result * 37 + name.hashCode()
      result = result * 37 + task_identity.hashCode()
      result = result * 37 + code.hashCode()
      result = result * 37 + message.hashCode()
      result = result * 37 + addon.hashCode()
      result = result * 37 + progress.hashCode()
      result = result * 37 + bytes_total.hashCode()
      result = result * 37 + bytes_processed.hashCode()
      result = result * 37 + flag.hashCode()
      result = result * 37 + save_path.hashCode()
      result = result * 37 + callbacks.hashCode()
      result = result * 37 + ignore_files.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    result += """identity=${sanitize(identity)}"""
    result += """type=$type"""
    result += """status=$status"""
    result += """update_ts=$update_ts"""
    result += """file_=${sanitize(file_)}"""
    result += """create_ts=$create_ts"""
    result += """url=${sanitize(url)}"""
    result += """size=$size"""
    result += """name=${sanitize(name)}"""
    result += """task_identity=${sanitize(task_identity)}"""
    result += """code=$code"""
    result += """message=${sanitize(message)}"""
    result += """addon=${sanitize(addon)}"""
    result += """progress=$progress"""
    result += """bytes_total=$bytes_total"""
    result += """bytes_processed=$bytes_processed"""
    result += """flag=$flag"""
    result += """save_path=${sanitize(save_path)}"""
    if (callbacks.isNotEmpty()) result += """callbacks=${sanitize(callbacks)}"""
    if (ignore_files.isNotEmpty()) result += """ignore_files=${sanitize(ignore_files)}"""
    return result.joinToString(prefix = "UserTask{", separator = ", ", postfix = "}")
  }

  public fun copy(
    identity: String = this.identity,
    type: Int = this.type,
    status: Int = this.status,
    update_ts: Long = this.update_ts,
    file_: String = this.file_,
    create_ts: Long = this.create_ts,
    url: String = this.url,
    size: Long = this.size,
    name: String = this.name,
    task_identity: String = this.task_identity,
    code: Int = this.code,
    message: String = this.message,
    addon: String = this.addon,
    progress: Long = this.progress,
    bytes_total: Long = this.bytes_total,
    bytes_processed: Long = this.bytes_processed,
    flag: Int = this.flag,
    save_path: String = this.save_path,
    callbacks: List<String> = this.callbacks,
    ignore_files: List<String> = this.ignore_files,
    unknownFields: ByteString = this.unknownFields,
  ): UserTask = UserTask(identity, type, status, update_ts, file_, create_ts, url, size, name,
      task_identity, code, message, addon, progress, bytes_total, bytes_processed, flag, save_path,
      callbacks, ignore_files, unknownFields)

  public companion object {
    @JvmField
    public val ADAPTER: ProtoAdapter<UserTask> = object : ProtoAdapter<UserTask>(
      FieldEncoding.LENGTH_DELIMITED, 
      UserTask::class, 
      "type.googleapis.com/v6.services.pub.UserTask", 
      PROTO_3, 
      null, 
      "public_user_offline.proto"
    ) {
      override fun encodedSize(`value`: UserTask): Int {
        var size_ = value.unknownFields.size
        if (value.identity != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(1, value.identity)
        if (value.type != 0) size_ += ProtoAdapter.INT32.encodedSizeWithTag(2, value.type)
        if (value.status != 0) size_ += ProtoAdapter.INT32.encodedSizeWithTag(3, value.status)
        if (value.update_ts != 0L) size_ += ProtoAdapter.INT64.encodedSizeWithTag(5,
            value.update_ts)
        if (value.file_ != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(6, value.file_)
        if (value.create_ts != 0L) size_ += ProtoAdapter.INT64.encodedSizeWithTag(7,
            value.create_ts)
        if (value.url != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(8, value.url)
        if (value.size != 0L) size_ += ProtoAdapter.UINT64.encodedSizeWithTag(9, value.size)
        if (value.name != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(10, value.name)
        if (value.task_identity != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(11,
            value.task_identity)
        if (value.code != 0) size_ += ProtoAdapter.INT32.encodedSizeWithTag(12, value.code)
        if (value.message != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(13, value.message)
        if (value.addon != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(14, value.addon)
        if (value.progress != 0L) size_ += ProtoAdapter.UINT64.encodedSizeWithTag(16,
            value.progress)
        if (value.bytes_total != 0L) size_ += ProtoAdapter.UINT64.encodedSizeWithTag(17,
            value.bytes_total)
        if (value.bytes_processed != 0L) size_ += ProtoAdapter.UINT64.encodedSizeWithTag(18,
            value.bytes_processed)
        if (value.flag != 0) size_ += ProtoAdapter.INT32.encodedSizeWithTag(19, value.flag)
        if (value.save_path != "") size_ += ProtoAdapter.STRING.encodedSizeWithTag(20,
            value.save_path)
        size_ += ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(21, value.callbacks)
        size_ += ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(22, value.ignore_files)
        return size_
      }

      override fun encode(writer: ProtoWriter, `value`: UserTask) {
        if (value.identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.identity)
        if (value.type != 0) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.type)
        if (value.status != 0) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.status)
        if (value.update_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.update_ts)
        if (value.file_ != "") ProtoAdapter.STRING.encodeWithTag(writer, 6, value.file_)
        if (value.create_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 7, value.create_ts)
        if (value.url != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.url)
        if (value.size != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.size)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 10, value.name)
        if (value.task_identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 11,
            value.task_identity)
        if (value.code != 0) ProtoAdapter.INT32.encodeWithTag(writer, 12, value.code)
        if (value.message != "") ProtoAdapter.STRING.encodeWithTag(writer, 13, value.message)
        if (value.addon != "") ProtoAdapter.STRING.encodeWithTag(writer, 14, value.addon)
        if (value.progress != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 16, value.progress)
        if (value.bytes_total != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 17,
            value.bytes_total)
        if (value.bytes_processed != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 18,
            value.bytes_processed)
        if (value.flag != 0) ProtoAdapter.INT32.encodeWithTag(writer, 19, value.flag)
        if (value.save_path != "") ProtoAdapter.STRING.encodeWithTag(writer, 20, value.save_path)
        ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 21, value.callbacks)
        ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 22, value.ignore_files)
        writer.writeBytes(value.unknownFields)
      }

      override fun encode(writer: ReverseProtoWriter, `value`: UserTask) {
        writer.writeBytes(value.unknownFields)
        ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 22, value.ignore_files)
        ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 21, value.callbacks)
        if (value.save_path != "") ProtoAdapter.STRING.encodeWithTag(writer, 20, value.save_path)
        if (value.flag != 0) ProtoAdapter.INT32.encodeWithTag(writer, 19, value.flag)
        if (value.bytes_processed != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 18,
            value.bytes_processed)
        if (value.bytes_total != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 17,
            value.bytes_total)
        if (value.progress != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 16, value.progress)
        if (value.addon != "") ProtoAdapter.STRING.encodeWithTag(writer, 14, value.addon)
        if (value.message != "") ProtoAdapter.STRING.encodeWithTag(writer, 13, value.message)
        if (value.code != 0) ProtoAdapter.INT32.encodeWithTag(writer, 12, value.code)
        if (value.task_identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 11,
            value.task_identity)
        if (value.name != "") ProtoAdapter.STRING.encodeWithTag(writer, 10, value.name)
        if (value.size != 0L) ProtoAdapter.UINT64.encodeWithTag(writer, 9, value.size)
        if (value.url != "") ProtoAdapter.STRING.encodeWithTag(writer, 8, value.url)
        if (value.create_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 7, value.create_ts)
        if (value.file_ != "") ProtoAdapter.STRING.encodeWithTag(writer, 6, value.file_)
        if (value.update_ts != 0L) ProtoAdapter.INT64.encodeWithTag(writer, 5, value.update_ts)
        if (value.status != 0) ProtoAdapter.INT32.encodeWithTag(writer, 3, value.status)
        if (value.type != 0) ProtoAdapter.INT32.encodeWithTag(writer, 2, value.type)
        if (value.identity != "") ProtoAdapter.STRING.encodeWithTag(writer, 1, value.identity)
      }

      override fun decode(reader: ProtoReader): UserTask {
        var identity: String = ""
        var type: Int = 0
        var status: Int = 0
        var update_ts: Long = 0L
        var file_: String = ""
        var create_ts: Long = 0L
        var url: String = ""
        var size: Long = 0L
        var name: String = ""
        var task_identity: String = ""
        var code: Int = 0
        var message: String = ""
        var addon: String = ""
        var progress: Long = 0L
        var bytes_total: Long = 0L
        var bytes_processed: Long = 0L
        var flag: Int = 0
        var save_path: String = ""
        val callbacks = mutableListOf<String>()
        val ignore_files = mutableListOf<String>()
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> identity = ProtoAdapter.STRING.decode(reader)
            2 -> type = ProtoAdapter.INT32.decode(reader)
            3 -> status = ProtoAdapter.INT32.decode(reader)
            5 -> update_ts = ProtoAdapter.INT64.decode(reader)
            6 -> file_ = ProtoAdapter.STRING.decode(reader)
            7 -> create_ts = ProtoAdapter.INT64.decode(reader)
            8 -> url = ProtoAdapter.STRING.decode(reader)
            9 -> size = ProtoAdapter.UINT64.decode(reader)
            10 -> name = ProtoAdapter.STRING.decode(reader)
            11 -> task_identity = ProtoAdapter.STRING.decode(reader)
            12 -> code = ProtoAdapter.INT32.decode(reader)
            13 -> message = ProtoAdapter.STRING.decode(reader)
            14 -> addon = ProtoAdapter.STRING.decode(reader)
            16 -> progress = ProtoAdapter.UINT64.decode(reader)
            17 -> bytes_total = ProtoAdapter.UINT64.decode(reader)
            18 -> bytes_processed = ProtoAdapter.UINT64.decode(reader)
            19 -> flag = ProtoAdapter.INT32.decode(reader)
            20 -> save_path = ProtoAdapter.STRING.decode(reader)
            21 -> callbacks.add(ProtoAdapter.STRING.decode(reader))
            22 -> ignore_files.add(ProtoAdapter.STRING.decode(reader))
            else -> reader.readUnknownField(tag)
          }
        }
        return UserTask(
          identity = identity,
          type = type,
          status = status,
          update_ts = update_ts,
          file_ = file_,
          create_ts = create_ts,
          url = url,
          size = size,
          name = name,
          task_identity = task_identity,
          code = code,
          message = message,
          addon = addon,
          progress = progress,
          bytes_total = bytes_total,
          bytes_processed = bytes_processed,
          flag = flag,
          save_path = save_path,
          callbacks = callbacks,
          ignore_files = ignore_files,
          unknownFields = unknownFields
        )
      }

      override fun redact(`value`: UserTask): UserTask = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
